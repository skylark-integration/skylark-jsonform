/**
 * skylark-jsonform - A version of jsonform that ported to running on skylarkjs
 * @author Hudaokeji, Inc.
 * @version v0.9.0
 * @link https://github.com/skylark-integration/skylark-jsonform/
 * @license MIT
 */
define(["skylark-langx-globals","skylark-langx-types","skylark-langx-objects","skylark-langx-arrays","skylark-langx-strings","skylark-jquery","./jsonform","./util","./element-types","./form-node"],function(e,t,r,o,i,s,n,a,m,l){var p=function(){this.eventhandlers=[],this.root=null,this.formDesc=null};return p.prototype.initialize=function(e){e=e||{},this.formDesc=r.clone(e),this.formDesc.prefix=this.formDesc.prefix||"jsonform-"+i.uniqueId(),this.formDesc.schema&&!this.formDesc.schema.properties&&(this.formDesc.schema={properties:this.formDesc.schema}),this.formDesc.form=this.formDesc.form||["*",{type:"actions",items:[{type:"submit",value:"Submit"}]}],this.formDesc.form=t.isArray(this.formDesc.form)?this.formDesc.form:[this.formDesc.form],this.formDesc.params=this.formDesc.params||{},this.root=new l,this.root.ownerTree=this,this.root.view=m.root,this.buildTree(),this.computeInitialValues()},p.prototype.buildTree=function(){a.each(this.formDesc.form,e=>{"*"===e?a.each(this.formDesc.schema.properties,(e,t)=>{this.root.appendChild(this.buildFromLayout({key:t}))}):(t.isString(e)&&(e={key:e}),this.root.appendChild(this.buildFromLayout(e)))},this)},p.prototype.buildFromLayout=function(e,i){var s,n=null,p=new l,h=null;if((e=r.clone(e)).items&&(t.isArray(e.items)?e.items=o.map(e.items,r.clone):e.items=[r.clone(e.items)]),e.key){if(!(n=a.getSchemaKey(this.formDesc.schema.properties,e.key)))throw new Error('The JSONForm object references the schema key "'+e.key+'" but that key does not exist in the JSON schema');if(this.formDesc.onElementSchema&&this.formDesc.onElementSchema(e,n),e.name=e.name||e.key,e.title=e.title||n.title,e.description=e.description||n.description,e.readOnly=e.readOnly||n.readOnly||e.readonly||n.readonly,e.id||(e.id=a.escapeSelector(this.formDesc.prefix)+"-elt-"+a.slugify(e.key)),e.allowEmpty&&(n._jsonform_allowEmpty=!0),!e.type){if(t.isArray(n.type)){if(o.contains(n.type,"null")&&(n.type=o.without(n.type,"null"),n.required=!1),n.type.length>1)throw new Error("Cannot process schema element with multiple types.");n.type=o.first(n.type)}"string"===n.type&&"color"===n.format?e.type="color":"number"!==n.type&&"integer"!==n.type||n.enum?"string"!==n.type&&"any"!==n.type||n.enum?"boolean"===n.type?e.type="checkbox":"object"===n.type?n.properties?e.type="fieldset":e.type="textarea":t.isUndefined(n.enum)?e.type=n.type:e.type="select":e.type="text":(e.type="number","number"===n.type&&(n.step="any"))}if(!e.options&&n.enum&&(e.titleMap?e.options=o.map(n.enum,function(t){return{value:t,title:a.hasOwnProperty(e.titleMap,t)?e.titleMap[t]:t}}):e.options=n.enum),"checkboxes"===e.type&&n.items){var c=n.items.enum;c&&(n.items._jsonform_checkboxes_as_array=!0),!c&&n.items[0]&&(c=n.items[0].enum)&&(n.items[0]._jsonform_checkboxes_as_array=!0)}"object"===n.type&&a.each(n.properties,(t,r)=>{p.appendChild(this.buildFromLayout({key:e.key+"."+r}))})}if(e.type||(e.type="none"),!(s=m[e.type]))throw new Error('The JSONForm contains an element whose type is unknown: "'+e.type+'"');if(n){if(!s.inputfield&&!s.array&&"selectfieldset"!==e.type&&"object"!==n.type)throw new Error('The JSONForm contains an element that links to an element in the JSON schema (key: "'+e.key+'") and that should not based on its type ("'+e.type+'")')}else if(s.inputfield&&"selectfieldset"!==e.type)throw new Error('The JSONForm defines an element of type "'+e.type+'" but no "key" property to link the input field to the JSON schema');return e.iddot=a.escapeSelector(e.id||""),p.formElement=e,p.schemaElement=n,p.view=s,p.ownerTree=this,e.handlers||(e.handlers={}),p.view.array?(h=e.items?e.items[0]||e.items:e.key+"[]",t.isString(h)&&(h={key:h}),p.setChildTemplate(this.buildFromLayout(h))):e.items&&a.each(e.items,e=>{t.isString(e)&&(e={key:e}),p.appendChild(this.buildFromLayout(e))}),p},p.prototype.computeInitialValues=function(){this.root.computeInitialValues(this.formDesc.value)},p.prototype.render=function(e){e&&(this.domRoot=e,this.root.render(),this.hasRequiredField()&&s(e).addClass("jsonform-hasrequired"))},p.prototype.forEachElement=function(e){var t=function(r){for(var o=0;o<r.children.length;o++)e(r.children[o]),t(r.children[o])};t(this.root)},p.prototype.validate=function(t){var r=n.getFormValue(this.domRoot),o=!1,i=this.formDesc;if(!1!==i.validate){var a=!1;if("object"!=typeof i.validate?e.JSONFormValidator&&(a=e.JSONFormValidator.createEnvironment("json-schema-draft-03")):a=i.validate,a){var m=a.validate(r,this.formDesc.schema);s(this.domRoot).jsonFormErrors(!1,i),m.errors.length&&(o||(o=[]),o=o.concat(m.errors))}}return o&&!t&&(i.displayErrors?i.displayErrors(o,this.domRoot):s(this.domRoot).jsonFormErrors(o,i)),{errors:o}},p.prototype.submit=function(e){var t=function(){return e&&(e.preventDefault(),e.stopPropagation()),!1},r=n.getFormValue(this.domRoot),o=this.formDesc,i=!1;if(this.forEachElement(function(t){i||t.view.onSubmit&&(i=!t.view.onSubmit(e,t))}),i)return t();var s=this.validate();return o.onSubmit&&!o.onSubmit(s.errors,r)?t():s.errors?t():!(!o.onSubmitValid||o.onSubmitValid(r))&&t()},p.prototype.hasRequiredField=function(){var e=function(r){if(!r)return null;if(r.required&&"boolean"!==r.type)return r;var i=o.find(r.properties,function(t){return e(t)});return i||(r.items&&(i=t.isArray(r.items)?o.find(r.items,function(t){return e(t)}):e(r.items))?i:void 0)};return e(this.formDesc.schema)},n.formTree=p});
//# sourceMappingURL=sourcemaps/form-tree.js.map
